"""
PyMOL Script: Export Selection to GFF3 Annotation File

This script extracts selected residues/atoms from a PyMOL session and formats them into a GFF3 file.
Usage:
    Run this script inside PyMOL after loading a structure and making a selection.
    Example:
        select my_selection, chain A and resi 50-100
        run pymol_to_gff3.py
        pymol_to_gff3 my_selection, output.gff3
"""

import pymol
from pymol import cmd

def pymol_to_gff3(selection="all", output_file="output.gff3"):
    """
    Extracts unique selected residues from PyMOL and writes them to a GFF3 file.

    :param selection: PyMOL selection string
    :param output_file: Output GFF3 file path
    """
    
    gff3_lines = [
        "##gff-version 3",
        "# Generated by PyMOL"
    ]
    
    atom_info = cmd.get_model(selection)
    unique_residues = set()

    for atom in atom_info.atom:
        residue_key = (atom.chain, atom.resi, atom.resn)
        if residue_key not in unique_residues:
            unique_residues.add(residue_key)
            
            seqid = atom.chain if atom.chain else "NA"
            source = "PyMOL"
            feature_type = "Residue"
            start = atom.resi
            end = atom.resi
            score = "."
            strand = "+"
            phase = "."
            attributes = f"ID={atom.resn}{atom.resi};Name={atom.resn};Chain={seqid}"

            gff3_line = f"{seqid}\t{source}\t{feature_type}\t{start}\t{end}\t{score}\t{strand}\t{phase}\t{attributes}"
            gff3_lines.append(gff3_line)

    # Write to file
    with open(output_file, "w") as f:
        f.write("\n".join(gff3_lines) + "\n")
    
    print(f"Running: pymol_to_gff3 {selection}, {output_file}")
    print(f"GFF3 file saved as {output_file}")

# Register the function in PyMOL
cmd.extend("pymol_to_gff3", pymol_to_gff3)
